library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity decod_component is
port(
	clk 				: in std_logic;
	A, B, C, D 			: in std_logic_vector(3 downto 0);
	sel_display			: out std_logic_vector(3 downto 0);
	segment				: out std_logic_vector(7 downto 0)
);
end decod_component;

architecture hardware of decod_component is

begin

process(clk)
variable psc : integer range 0 to 50001;
variable sel_dig : integer range 0 to 4;
begin
	if clk'event and clk = '1' then
		psc := psc + 1;
		if psc = 50001 then
			psc := 0;
			sel_dig := sel_dig + 1;
			if sel_dig = 4 then
				sel_dig := 0;
			end if;
		end if;
	end if;

case sel_dig is
	when 0 => sel_display <= "0111";
	when 1 => sel_display <= "1011";
	when 2 => sel_display <= "1101";
	when 3 => sel_display <= "1110";
	when others => sel_display <= "1111";
end case;

if sel_dig = 0 then
	case A is
		when "0000" => segment <= "00000011";
		when "0001" => segment <= "10011111";
		when "0010" => segment <= "00100101";
		when "0011" => segment <= "00001101";
		when "0100" => segment <= "10011001";
		when "0101" => segment <= "01001001";
		when "0110" => segment <= "01000001";
		when "0111" => segment <= "00011111";
		when "1000" => segment <= "00000001";
		when "1001" => segment <= "00001001";
		when others => segment <= "11111111";
	end case;
end if;

if sel_dig = 1 then
	case B is
		when "0000" => segment <= "00000011";
		when "0001" => segment <= "10011111";
		when "0010" => segment <= "00100101";
		when "0011" => segment <= "00001101";
		when "0100" => segment <= "10011001";
		when "0101" => segment <= "01001001";
		when "0110" => segment <= "01000001";
		when "0111" => segment <= "00011111";
		when "1000" => segment <= "00000001";
		when "1001" => segment <= "00001001";
		when others => segment <= "11111111";
	end case;
end if;

if sel_dig = 2 then
	case C is
		when "0000" => segment <= "00000011";
		when "0001" => segment <= "10011111";
		when "0010" => segment <= "00100101";
		when "0011" => segment <= "00001101";
		when "0100" => segment <= "10011001";
		when "0101" => segment <= "01001001";
		when "0110" => segment <= "01000001";
		when "0111" => segment <= "00011111";
		when "1000" => segment <= "00000001";
		when "1001" => segment <= "00001001";
		when others => segment <= "11111111";
	end case;
end if;

if sel_dig = 3 then
	case D is
		when "0000" => segment <= "00000011";
		when "0001" => segment <= "10011111";
		when "0010" => segment <= "00100101";
		when "0011" => segment <= "00001101";
		when "0100" => segment <= "10011001";
		when "0101" => segment <= "01001001";
		when "0110" => segment <= "01000001";
		when "0111" => segment <= "00011111";
		when "1000" => segment <= "00000001";
		when "1001" => segment <= "00001001";
		when others => segment <= "11111111";
	end case;
end if;

end process;
--sel_display <= digito_buffer;

end hardware;